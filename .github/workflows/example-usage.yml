# Example workflow for using TestFlight PM Action
# This workflow demonstrates how to monitor TestFlight feedback and create GitHub issues

name: TestFlight PM - Monitor Feedback

on:
  schedule:
    # Run every 4 hours during business hours (UTC)
    - cron: '0 8,12,16,20 * * 1-5'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      feedback-types:
        description: 'Types of feedback to monitor'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - crashes
          - screenshots
      
      max-issues:
        description: 'Maximum issues to create'
        required: false
        default: '10'
        type: string
      
      dry-run:
        description: 'Run in dry-run mode (no issues created)'
        required: false
        default: false
        type: boolean

jobs:
  monitor-testflight:
    runs-on: ubuntu-latest
    name: Monitor TestFlight Feedback
    
    # Explicit permissions following principle of least privilege
    permissions:
      contents: read    # Required to access repository content
      issues: write     # Required to create GitHub issues from TestFlight feedback
    
    steps:
      - name: Monitor TestFlight and Create Issues
        uses: vishrutkmr7/testflight-pm@v1
        with:
          # Required: App Store Connect API credentials
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          app-store-connect-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          app-store-connect-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
          
          # Optional: Specify which app to monitor
          testflight-app-id: ${{ secrets.TESTFLIGHT_APP_ID }}
          testflight-bundle-id: 'com.yourcompany.yourapp'
          
          # GitHub Issues configuration (uses action context by default)
          create-github-issues: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
          # Optional: Linear integration
          create-linear-issues: false
          # linear-api-token: ${{ secrets.LINEAR_API_TOKEN }}
          # linear-team-id: ${{ secrets.LINEAR_TEAM_ID }}
          
          # Monitoring configuration
          feedback-types: ${{ github.event.inputs.feedback-types || 'all' }}
          max-issues-per-run: ${{ github.event.inputs.max-issues || '10' }}
          
          # Issue labeling
          issue-labels: 'testflight,feedback,mobile'
          crash-issue-labels: 'bug,crash,priority-high'
          feedback-issue-labels: 'enhancement,user-feedback'
          
          # Features
          duplicate-detection: true
          include-device-info: true
          include-app-version: true
          
          # Dry run mode for testing
          dry-run: ${{ github.event.inputs.dry-run || false }}
      
      - name: Display Results
        if: always()
        run: |
          echo "ðŸ“Š TestFlight PM Results:"
          echo "Issues Created: ${{ steps.monitor.outputs.issues-created }}"
          echo "Crashes Processed: ${{ steps.monitor.outputs.crashes-processed }}"
          echo "Feedback Processed: ${{ steps.monitor.outputs.feedback-processed }}"
          echo "Errors: ${{ steps.monitor.outputs.errors-encountered }}"
          
          echo "ðŸ“‹ Summary:"
          echo '${{ steps.monitor.outputs.summary }}' | jq '.' 